<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.1.4">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant':'', 'session':'001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="(1024, 768)" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="test_final" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="instructions_processing">
      <TextComponent name="instructions">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instructions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You will now see a series of math equations, of which you will type in the correct answer.&amp;#10;&amp;#10;Please also try to keep your score above 65%.&amp;#10;&amp;#10;Press space to continue." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trials_processing">
      <TextComponent name="operation">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$Problem" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Operation_answer" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="operation_feedback">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_feedback" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_14">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="RT_list = [] #empty list to hold values&amp;#10;operation_text = ''" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="RT_list = [];&amp;#10;operation_text = '';&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="operation.setText('')" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if(len(key_resp.keys) &gt; 0):&amp;#10;    operation_text = ''.join(key_resp.keys)&amp;#10;    thisExp.addData(&quot;digit_answer&quot;, operation_text) #store response in data file after entering&amp;#10;&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (key_resp.keys) {&amp;#10;    if ((key_resp.keys.length &gt; 0)) {&amp;#10;        operation_text = key_resp.keys.join('');&amp;#10;        psychoJS.experiment.addData(&quot;digit_answer&quot;, operation_text);&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    operation_text = key_resp.keys.join('');&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="key_resp.rt = Number.parseFloat((function () {&amp;#10;    var _pj_a = [], _pj_b = key_resp.rt;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var x = _pj_b[_pj_c];&amp;#10;        _pj_a.push(x.toString());&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this)).join(''));&amp;#10;RT_list.push(key_resp.rt);&amp;#10;psychoJS.experiment.addData(&quot;RT_list&quot;, RT_list);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="key_resp.rt = float(''.join([str(x) for x in key_resp.rt]))&amp;#10;&amp;#10;RT_list.append(key_resp.rt)&amp;#10;thisExp.addData('RT_list', RT_list)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_14" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructions_8">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="Answer?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg = ''&amp;#10;total_number = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot;&quot;;&amp;#10;number_correct = 0;&amp;#10;total_number = 0;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="feedback_msg.setText('')&amp;#10;total_number = total_number + 1;&amp;#10;if ((key_resp.keys.join('') === Operation_answer.toString())) {&amp;#10;    number_correct = number_correct + 1;&amp;#10;    msg = (&quot;Correct! \nScore = &quot; + round(((number_correct * 100) / total_number), 2).toString()+ '%');&amp;#10;    msgColor = &quot;green&quot;;&amp;#10;} else {&amp;#10;    msg = (&quot;Oops! That was wrong \nScore = &quot; + round(((number_correct * 100) / total_number), 2).toString() + '%');&amp;#10;    msgColor = &quot;red&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if next_equation.thisN == 0:&amp;#10;    number_correct = 0&amp;#10;&amp;#10;if (''.join(key_resp.keys) == str(Operation_answer)):&amp;#10;    total_number += 1&amp;#10;    number_correct = number_correct + 1&amp;#10;    msg='Correct! \nScore = ' + str(round(number_correct*100/total_number, 2)) + '%'&amp;#10;    msgColor = 'green'&amp;#10;else:&amp;#10;    total_number += 1&amp;#10;    msg='Oops! That was wrong \nScore = ' + str(round(number_correct*100/total_number,2)) + '%'&amp;#10;    msgColor = 'red'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_msg">
        <Param name="color" updates="set every repeat" val="$msgColor" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_msg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0,0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="final_feedback">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="proc_msg = ''&amp;#10;sumRT = 0&amp;#10;sumdiff = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="proc_msg = &quot;&quot;;&amp;#10;sumRT = 0;&amp;#10;sumdiff = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((next_equation.thisN === next_equation.nTotal)) {&amp;#10;    if (((number_correct / next_equation.nTotal) &gt;= 0.65)) {&amp;#10;        proc_msg = &quot;Congratulations, you answered correctly on above 65% of the trials. Press space to continue.&quot;;&amp;#10;        repeat_practice.finished = true;&amp;#10;        psychoJS.experiment.addData(&quot;processing_score&quot;, (number_correct / next_equation.nTotal));&amp;#10;    } else {&amp;#10;        proc_msg = &quot;You failed to answer correctly on at least 65% of the trials, please try again until you reach the passing rate of 65%. Press space to start.&quot;;&amp;#10;        repeat_practice.finished = false;&amp;#10;    }&amp;#10;}&amp;#10;for (var x, _pj_c = 0, _pj_a = RT_list, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    x = _pj_a[_pj_c];&amp;#10;    sumRT = (sumRT + x);&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;sumRT&quot;, sumRT);&amp;#10;meanRT = (sumRT / 15);&amp;#10;psychoJS.experiment.addData(&quot;meanRT&quot;, meanRT);&amp;#10;for (var x, _pj_c = 0, _pj_a = RT_list, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    x = _pj_a[_pj_c];&amp;#10;    sumdiff = (sumdiff + Math.pow((x - meanRT), 2));&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;sumdiff&quot;, sumdiff);&amp;#10;sd = Math.pow((sumdiff / 15), 0.5);&amp;#10;psychoJS.experiment.addData(&quot;sd&quot;, sd);&amp;#10;RT = (meanRT + (2.58 * sd));&amp;#10;psychoJS.experiment.addData(&quot;RT&quot;, RT);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if next_equation.thisN == next_equation.nTotal:&amp;#10;    if (number_correct/(next_equation.nTotal)) &gt;= 0.65:&amp;#10;        proc_msg = 'Congratulations, you answered correctly on above 65% of the trials. Press space to continue.'&amp;#10;        repeat_practice.finished = True&amp;#10;        thisExp.addData(&quot;processing_score&quot;, (number_correct/(next_equation.nTotal)))&amp;#10;    else:&amp;#10;        proc_msg = 'You failed to answer correctly on at least 65% of the trials, please try again until you reach the passing rate of 65%. Press space to start.'&amp;#10;        repeat_practice.finished = False &amp;#10;&amp;#10;&amp;#10;for x in RT_list:&amp;#10;    sumRT = sumRT + x&amp;#10;&amp;#10;thisExp.addData('sumRT', sumRT)&amp;#10;meanRT = sumRT/15&amp;#10;thisExp.addData('meanRT', meanRT)&amp;#10;&amp;#10;for x in RT_list:&amp;#10;    sumdiff = sumdiff + ((x - meanRT)**2)&amp;#10;&amp;#10;thisExp.addData('sumdiff', sumdiff)&amp;#10;sd = (sumdiff/15) ** 0.5&amp;#10;thisExp.addData('sd', sd)&amp;#10;&amp;#10;RT = meanRT + (2.58*sd)&amp;#10;thisExp.addData('RT', RT)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_msg_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_msg_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$proc_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_memory">
      <TextComponent name="instructions_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="instructions_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Letters will now appear one by one.&amp;#10;Please remember them in the correct order of appearance.&amp;#10;Do not say the letters out loud while recalling.&amp;#10;&amp;#10;Press space to continue.&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trials_memory">
      <TextComponent name="letter">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="letter" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screen_text" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="loop_i += 1&amp;#10;screen_text = chosen_stimuli[loop_i]" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="recall">
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z', 'backspace','return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="text_feedback">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="text_feedback" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$screen_text&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_5">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="total_memory_acc = 0&amp;#10;memory_wrong = 0&amp;#10;screen_text = ''" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="total_memory_acc = 0;&amp;#10;memory_wrong = 0;&amp;#10;screen_text = &quot;&quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="text_feedback.setText('')" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if key_resp_5.keys:&amp;#10;    if((&quot;backspace&quot; in key_resp_5.keys) and len(_key_resp_5_allKeys) &gt; 1):&amp;#10;        _key_resp_5_allKeys.pop()&amp;#10;            &amp;#10;        if(len(_key_resp_5_allKeys) &gt; 0):&amp;#10;            _key_resp_5_allKeys.pop() #remove backspace&amp;#10;&amp;#10;    elif('backspace' in key_resp_5.keys):&amp;#10;        _key_resp_5_allKeys = []&amp;#10;        screen_text = ''                &amp;#10;                &amp;#10;    elif(&quot;return&quot; in key_resp_5.keys):&amp;#10;        key_resp_5.keys.pop() #remove return&amp;#10;            &amp;#10;        if(len(key_resp_5.keys) &gt; 0):&amp;#10;            screen_text = ''.join(key_resp_5.keys)&amp;#10;            thisExp.addData(&quot;simple_recall&quot;, screen_text) #store response in data file after entering&amp;#10;            screen_text = ''&amp;#10;&amp;#10;        continueRoutine = False&amp;#10;    else:&amp;#10;        screen_text = ''.join(key_resp_5.keys)&amp;#10;        screen_text = screen_text.upper()&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (key_resp_5.keys) {&amp;#10;    if ((_pj.in_es6(&quot;backspace&quot;, key_resp_5.keys) &amp;&amp; (_key_resp_5_allKeys.length &gt; 1))) {&amp;#10;        _key_resp_5_allKeys.pop();&amp;#10;        if ((_key_resp_5_allKeys.length &gt; 0)) {&amp;#10;            _key_resp_5_allKeys.pop();&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;backspace&quot;, key_resp_5.keys)) {&amp;#10;            _key_resp_5_allKeys = [];&amp;#10;            screen_text = &quot;&quot;;&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;return&quot;, key_resp_5.keys)) {&amp;#10;                key_resp_5.keys.pop();&amp;#10;                if ((key_resp_5.keys.length &gt; 0)) {&amp;#10;                    screen_text = key_resp_5.keys.join('');&amp;#10;                    psychoJS.experiment.addData(&quot;simple_recall&quot;, screen_text);&amp;#10;                }&amp;#10;                screen_text = '';&amp;#10;                continueRoutine = false;&amp;#10;            } else {&amp;#10;                screen_text = key_resp_5.keys.join('');&amp;#10;                screen_text = screen_text.toUpperCase();&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((key_resp_5.keys.join('').toUpperCase() === correct_answers.slice(-stimuli_count).join('').toUpperCase())) {&amp;#10;    total_memory_acc = (total_memory_acc + 1);&amp;#10;    psychoJS.experiment.addData(&quot;simple_recall_corr&quot;, &quot;1&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;simple_recall_corrkeys&quot;, correct_answers.slice(-stimuli_count).join('').toUpperCase());&amp;#10;} else {&amp;#10;    memory_wrong = (memory_wrong + 1);&amp;#10;    psychoJS.experiment.addData(&quot;simple_recall_corr&quot;, &quot;0&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;simple_recall_corrkeys&quot;, correct_answers.slice(-stimuli_count).join('').toUpperCase());&amp;#10;}&amp;#10;if ((memory_wrong &gt;= 3) || (stimuli_count == 15)) {&amp;#10;    next_level.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    if ((total_memory_acc &gt;= 2)) {&amp;#10;        stimuli_count += 1;&amp;#10;        total_memory_acc = 0;&amp;#10;        memory_wrong = 0;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="##if there are 3 or more wrong responses in 5 or less trials, break&amp;#10;if (''.join(key_resp_5.keys).upper() == ''.join(correct_answers[-stimuli_count:]).upper()):&amp;#10;    total_memory_acc = total_memory_acc + 1&amp;#10;    thisExp.addData(&quot;simple_recall_corr&quot;, &quot;1&quot;)&amp;#10;    thisExp.addData(&quot;simple_recall_corrkeys&quot;, ''.join(correct_answers[-stimuli_count:]).upper())&amp;#10;else:&amp;#10;    memory_wrong = memory_wrong + 1&amp;#10;    thisExp.addData(&quot;simple_recall_corr&quot;, &quot;0&quot;)&amp;#10;    thisExp.addData(&quot;simple_recall_corrkeys&quot;, ''.join(correct_answers[-stimuli_count:]).upper())&amp;#10;&amp;#10;&amp;#10;if (memory_wrong &gt;= 3 or stimuli_count == 15):&amp;#10;    next_level.finished = True&amp;#10;    continueRoutine = False&amp;#10;elif (total_memory_acc &gt;= 2):&amp;#10;    stimuli_count += 1&amp;#10;    total_memory_acc = 0&amp;#10;    memory_wrong = 0&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_5" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructions_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Answer and press enter." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="initialize">
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="show_letters">
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$stimuli" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_6">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="stimuli_count = 2&amp;#10;correct_answers = []&amp;#10;stimuli = 'Z'" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="stimuli_count = 2;&amp;#10;correct_answers = [];&amp;#10;stimuli = &quot;Z&quot;;&amp;#10;function shuffle(array) {&amp;#10;    let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;&amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;&amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;&amp;#10;    return array;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="function shuffle(array) {&amp;#10;    let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;&amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;&amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;&amp;#10;    return array;&amp;#10;}&amp;#10;correct_answers.push(stimuli);&amp;#10;stimuli = letter.split(&quot; &quot;);&amp;#10;stimuli = shuffle(stimuli)[0];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="import random&amp;#10;correct_answers.append(stimuli)&amp;#10;letter = letter.split(' ')&amp;#10;stimuli = random.choice(letter)&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_6" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="show_letters_2">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$stimuli_3" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_9">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="span_count = 2&amp;#10;correct_answers_3 = []&amp;#10;stimuli_3 = 'Z'" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="span_count = 2;&amp;#10;correct_answers_3 = [];&amp;#10;stimuli_3 = &quot;Z&quot;;&amp;#10;function shuffle(array) {&amp;#10;    let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;&amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;&amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;&amp;#10;    return array;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="function shuffle(array) {&amp;#10;    let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;&amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;&amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;&amp;#10;    return array;&amp;#10;}&amp;#10;correct_answers_3.push(stimuli_3);&amp;#10;stimuli_3 = letter.split(&quot; &quot;);&amp;#10;stimuli_3 = shuffle(stimuli_3)[0];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="import random&amp;#10;correct_answers_3.append(stimuli_3)&amp;#10;letter = letter.split(' ')&amp;#10;stimuli_3 = random.choice(letter)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_9" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="trials_processing_2">
      <TextComponent name="operation_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Problem" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_7">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Operation_answer" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_7" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="operation_feedback_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_feedback_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_8">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="operation_feedback_3.setText('');" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if(len(key_resp_7.keys) &gt; 0):&amp;#10;    operation_text_3 = ''.join(key_resp_7.keys)&amp;#10;    thisExp.addData(&quot;digit_answer&quot;, operation_text_3) #store response in data file after entering&amp;#10;&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;operation_text_3 = ''.join(key_resp_7.keys)" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (key_resp_7.keys){&amp;#10;    if ((key_resp_7.keys.length &gt; 0)) {&amp;#10;        operation_text_3 = key_resp_7.keys.join('');&amp;#10;        psychoJS.experiment.addData(&quot;digit_answer&quot;, operation_text_3);&amp;#10;        continueRoutine = false;&amp;#10;}&amp;#10;    operation_text_3 = key_resp_7.keys.join('');&amp;#10;}" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_8" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructions_10">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Answer?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="recall_2">
      <KeyboardComponent name="key_resp_8">
        <Param name="allowedKeys" updates="constant" val="'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'backspace','return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$correct_answers_3" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_8" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="text_feedback_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="text_feedback_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$screen_text_2" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_10">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="total_complex_acc = 0&amp;#10;complex_wrong = 0&amp;#10;screen_text_2 = ''" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="total_complex_acc = 0;&amp;#10;complex_wrong = 0;&amp;#10;screen_text_2 = '';&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="text_feedback_2.setText('')" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if key_resp_8.keys:&amp;#10;    if((&quot;backspace&quot; in key_resp_8.keys) and len(_key_resp_8_allKeys) &gt; 1):&amp;#10;        _key_resp_8_allKeys.pop()&amp;#10;            &amp;#10;        if(len(_key_resp_8_allKeys) &gt; 0):&amp;#10;            _key_resp_8_allKeys.pop() #remove backspace&amp;#10;&amp;#10;    elif('backspace' in key_resp_8.keys):&amp;#10;        _key_resp_8_allKeys = []&amp;#10;        screen_text_2 = ''                &amp;#10;                &amp;#10;    elif(&quot;return&quot; in key_resp_8.keys):&amp;#10;        key_resp_8.keys.pop() #remove return&amp;#10;            &amp;#10;        if(len(key_resp_8.keys) &gt; 0):&amp;#10;            screen_text_2 = ''.join(key_resp_8.keys)&amp;#10;            thisExp.addData(&quot;complex_recall&quot;, screen_text_2) #store response in data file after entering&amp;#10;            screen_text_2 = ''&amp;#10;&amp;#10;        continueRoutine = False&amp;#10;    else:&amp;#10;        screen_text_2 = ''.join(key_resp_8.keys)&amp;#10;        screen_text_2 = screen_text_2.upper()&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (key_resp_8.keys) {&amp;#10;    if ((_pj.in_es6(&quot;backspace&quot;, key_resp_8.keys) &amp;&amp; (_key_resp_8_allKeys.length &gt; 1))) {&amp;#10;        _key_resp_8_allKeys.pop();&amp;#10;        if ((_key_resp_8_allKeys.length &gt; 0)) {&amp;#10;            _key_resp_8_allKeys.pop();&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;backspace&quot;, key_resp_8.keys)) {&amp;#10;            _key_resp_8_allKeys = [];&amp;#10;            screen_text_2 = &quot;&quot;;&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;return&quot;, key_resp_8.keys)) {&amp;#10;                key_resp_8.keys.pop();&amp;#10;                if ((key_resp_8.keys.length &gt; 0)) {&amp;#10;                    screen_text_2 = key_resp_8.keys.join('');&amp;#10;                    psychoJS.experiment.addData(&quot;complex_recall&quot;, screen_text_2);&amp;#10;                }&amp;#10;                screen_text_2 = '';&amp;#10;                continueRoutine = false;&amp;#10;            } else {&amp;#10;                screen_text_2 = key_resp_8.keys.join('');&amp;#10;                screen_text_2 = screen_text_2.toUpperCase();&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((key_resp_8.keys.slice(-span_count).join('').toUpperCase() === correct_answers_3.slice(-span_count).join('').toUpperCase())) {&amp;#10;    complex_wrong = 0;&amp;#10;    psychoJS.experiment.addData(&quot;complex_recall_corr&quot;, &quot;1&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;complex_recall_corrkeys&quot;, correct_answers_3.slice(-span_count).join('').toUpperCase());&amp;#10;    span_count = (span_count + 1);&amp;#10;} else {&amp;#10;    complex_wrong = (complex_wrong + 1);&amp;#10;    psychoJS.experiment.addData(&quot;complex_recall_corr&quot;, &quot;0&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;complex_recall_corrkeys&quot;, correct_answers_3.slice(-span_count).join('').toUpperCase());&amp;#10;}&amp;#10;if ((complex_wrong === 2)) {&amp;#10;    span_recall.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;loop_i_2 = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if (''.join(key_resp_8.keys[-span_count:]).upper() == ''.join(correct_answers_3[-span_count:]).upper()):&amp;#10;    complex_wrong = 0 #reset wrong number of repsonses&amp;#10;    thisExp.addData(&quot;complex_recall_corr&quot;, &quot;1&quot;) &amp;#10;    thisExp.addData(&quot;complex_recall_corrkeys&quot;, ''.join(correct_answers_3[-span_count:]).upper())&amp;#10;    span_count = span_count + 1 #increase set size&amp;#10;else:&amp;#10;    complex_wrong = complex_wrong + 1&amp;#10;    thisExp.addData(&quot;complex_recall_corr&quot;, &quot;0&quot;)&amp;#10;    thisExp.addData(&quot;complex_recall_corrkeys&quot;, ''.join(correct_answers_3[-span_count:]).upper())&amp;#10;&amp;#10;if (complex_wrong == 2):&amp;#10;    span_recall.finished = True&amp;#10;    continueRoutine = False #stop task if 2 consec wrong trials in set size&amp;#10;&amp;#10;loop_i_2 = 0" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_10" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructions_5">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Answer and press enter." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="finished">
      <TextComponent name="finish">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="finish" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You have now come to the end of the task.&amp;#10;Please call the experimenter into the room." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_12">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_12" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_complex_practice"/>
    <Routine name="show_letters_prac">
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$stimuli_2" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_7">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="correct_answers_2 = []&amp;#10;stimuli_2 = 'Z'&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="correct_answers_2 = [];&amp;#10;stimuli_2 = &quot;Z&quot;;&amp;#10;function shuffle(array) {&amp;#10;    let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;&amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;&amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;&amp;#10;    return array;&amp;#10;  }" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="function shuffle(array) {&amp;#10;    let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;&amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;&amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;&amp;#10;    return array;&amp;#10;}&amp;#10;correct_answers_2.push(stimuli_2);&amp;#10;stimuli_2 = letter.split(&quot; &quot;);&amp;#10;stimuli_2 = shuffle(stimuli_2)[0];&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="import random&amp;#10;correct_answers_2.append(stimuli_2)&amp;#10;letter = letter.split(' ')&amp;#10;stimuli_2 = random.choice(letter)&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_7" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="recall_prac">
      <KeyboardComponent name="key_resp_9">
        <Param name="allowedKeys" updates="constant" val="'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'backspace','return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$correct_answers_2" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_9" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="text_feedback_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="text_feedback_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$screen_text_3" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_11">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="total_memory_acc_2 = 0&amp;#10;memory_wrong_2 = 0&amp;#10;screen_text_3 = ''" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="total_memory_acc_2 = 0;&amp;#10;memory_wrong_2 = 0;&amp;#10;screen_text_3 = '';" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="text_feedback_3.setText('')" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if key_resp_9.keys:&amp;#10;    if((&quot;backspace&quot; in key_resp_9.keys) and len(_key_resp_9_allKeys) &gt; 1):&amp;#10;        _key_resp_9_allKeys.pop()&amp;#10;            &amp;#10;        if(len(_key_resp_9_allKeys) &gt; 0):&amp;#10;            _key_resp_9_allKeys.pop() #remove backspace&amp;#10;&amp;#10;    elif('backspace' in key_resp_9.keys):&amp;#10;        _key_resp_9_allKeys = []&amp;#10;        screen_text_3 = ''                &amp;#10;                &amp;#10;    elif(&quot;return&quot; in key_resp_9.keys):&amp;#10;        key_resp_9.keys.pop() #remove return&amp;#10;            &amp;#10;        if(len(key_resp_9.keys) &gt; 0):&amp;#10;            screen_text_3 = ''.join(key_resp_9.keys)&amp;#10;            thisExp.addData(&quot;complex_recall_practice&quot;, screen_text_3) #store response in data file after entering&amp;#10;            screen_text_3 = ''&amp;#10;&amp;#10;        continueRoutine = False&amp;#10;    else:&amp;#10;        screen_text_3 = ''.join(key_resp_9.keys)&amp;#10;        screen_text_3 = screen_text_3.upper()&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (key_resp_9.keys) {&amp;#10;    if ((_pj.in_es6(&quot;backspace&quot;, key_resp_9.keys) &amp;&amp; (_key_resp_9_allKeys.length &gt; 1))) {&amp;#10;        _key_resp_9_allKeys.pop();&amp;#10;        if ((_key_resp_9_allKeys.length &gt; 0)) {&amp;#10;            _key_resp_9_allKeys.pop();&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;backspace&quot;, key_resp_9.keys)) {&amp;#10;            _key_resp_9_allKeys = [];&amp;#10;            screen_text_3 = &quot;&quot;;&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;return&quot;, key_resp_9.keys)) {&amp;#10;                key_resp_9.keys.pop();&amp;#10;                if ((key_resp_9.keys.length &gt; 0)) {&amp;#10;                    screen_text_3 = key_resp_9.keys.join('');&amp;#10;                    psychoJS.experiment.addData(&quot;complex_recall_practice&quot;, screen_text_3);&amp;#10;                }&amp;#10;                screen_text_3 = '';&amp;#10;                continueRoutine = false;&amp;#10;            } else {&amp;#10;                screen_text_3 = key_resp_9.keys.join('');&amp;#10;                screen_text_3 = screen_text_3.toUpperCase();&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_11" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructions_6">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Answer and press enter." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions_complex_prac">
      <TextComponent name="instructions_4">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instructions_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="In this block, each math equation will be followed by a letter to be recalled.&amp;#10;&amp;#10;Equations will continually be presented unless you correctly answer them in the limited time given.&amp;#10;Please accurately respond to the equations and remember the letters presented after.&amp;#10;&amp;#10;You will first start with some practice trials where feedback is provided.&amp;#10;&amp;#10;Press space to continue." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_6">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_6" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_complex">
      <TextComponent name="instructions_7">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instructions_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Now you will start the actual task.&amp;#10;&amp;#10;Again, each math equation will be followed by a letter to be recalled.&amp;#10;&amp;#10;Equations will continually be presented unless you correctly answer them in the limited time given.&amp;#10;Please accurately respond to the equations and remember the letters presented after.&amp;#10;No feedback will be provided on whether the letters are correct or not.&amp;#10;Try not to say the letters out loud while recalling.&amp;#10;&amp;#10;Press space to continue." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_10" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="feedback_2">
      <CodeComponent name="code_12">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg2 = ''&amp;#10;prac_acc = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg2 = &quot;&quot;;&amp;#10;prac_acc = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((key_resp_9.keys.join('').toUpperCase() === correct_answers_2.slice(-2).join('').toUpperCase())) {&amp;#10;    msg2 = &quot;Correct&quot;;&amp;#10;    msg2Color = &quot;green&quot;;&amp;#10;} else {&amp;#10;    msg2 = &quot;Incorrect&quot;;&amp;#10;    msg2Color = &quot;red&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if (''.join(key_resp_9.keys).upper() == ''.join(correct_answers_2[-2:]).upper()):&amp;#10;    msg2 = 'Correct'&amp;#10;    msg2Color = 'green'&amp;#10;else:&amp;#10;    msg2 = 'Incorrect'&amp;#10;    msg2Color = 'red'&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((key_resp_9.keys.join('').toUpperCase() === correct_answers_2.slice(-2).join('').toUpperCase())) {&amp;#10;    prac_acc = (prac_acc + 1);&amp;#10;    psychoJS.experiment.addData(&quot;complex_prac_corr&quot;, &quot;1&quot;);&amp;#10;} else {&amp;#10;    span_recall_prac.finished = false;&amp;#10;    continueRoutine = true;&amp;#10;    prac_acc = 0;&amp;#10;    psychoJS.experiment.addData(&quot;complex_prac_corr&quot;, &quot;0&quot;);&amp;#10;}&amp;#10;if ((prac_acc &gt;= 3)) {&amp;#10;    span_recall_prac.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;loop_i_3 = 0;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if (''.join(key_resp_9.keys).upper() == ''.join(correct_answers_2[-2:]).upper()):&amp;#10;    prac_acc = prac_acc + 1&amp;#10;    thisExp.addData(&quot;complex_prac_corr&quot;, &quot;1&quot;)&amp;#10;else:&amp;#10;    span_recall_prac.finished = False&amp;#10;    continueRoutine = True&amp;#10;    prac_acc = 0 #reset score if one trial is wrongly responded to&amp;#10;    thisExp.addData(&quot;complex_prac_corr&quot;, &quot;0&quot;)&amp;#10;&amp;#10;if (prac_acc &gt;= 3): &amp;#10;    span_recall_prac.finished = True&amp;#10;    continueRoutine = False&amp;#10;#stop practice if 3 consecutive trials correct&amp;#10;&amp;#10;loop_i_3 = 0" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_12" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_msg_3">
        <Param name="color" updates="set every repeat" val="$msg2Color" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_msg_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg2" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="trials_processing_prac">
      <TextComponent name="operation_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Problem&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Operation_answer" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_11" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="operation_feedback_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_feedback_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_13">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="operation_feedback_2.setText('');" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if(len(key_resp_11.keys) &gt; 0):&amp;#10;    operation_text_2 = ''.join(key_resp_11.keys)&amp;#10;    thisExp.addData(&quot;digit_answer&quot;, operation_text_2) #store response in data file after entering&amp;#10;&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;operation_text_2 = ''.join(key_resp_11.keys)" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (key_resp_11.keys) {&amp;#10;    if ((key_resp_11.keys.length &gt; 0)) {&amp;#10;        operation_text_2 = key_resp_11.keys.join('');&amp;#10;        psychoJS.experiment.addData(&quot;digit_answer&quot;, operation_text_2);&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    operation_text_2 = key_resp_11.keys.join('');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_13" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructions_9">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$RT" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Answer?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback_quick">
      <CodeComponent name="code_15">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg3 = ''&amp;#10;loop_o = 0&amp;#10;number_correct_2 = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg3 = &quot;&quot;;&amp;#10;loop_o = 0;&amp;#10;number_correct_2 = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="feedback_msg_4.setText('')&amp;#10;loop_o = loop_o + 1;&amp;#10;if ((! key_resp_11.keys)) {&amp;#10;    continueRoutine = true;&amp;#10;    msg3 = (&quot;Be faster! \nScore = &quot; + round(((number_correct_2 * 100) / loop_o), 2).toString()) + '%';&amp;#10;    msg3Color = &quot;red&quot;;&amp;#10;    psychoJS.experiment.addData(&quot;operation_correct&quot;, 0);&amp;#10;    repeat_if_wrong_prac.finished = false;&amp;#10;} else {&amp;#10;    if ((key_resp_11.keys.join('') === Operation_answer.toString())) {&amp;#10;        number_correct_2 = (number_correct_2 + 1);&amp;#10;        msg3 = (&quot;Correct! \nScore = &quot; + round(((number_correct_2 * 100) / loop_o), 2).toString()) + '%';&amp;#10;        msg3Color = &quot;green&quot;;&amp;#10;        psychoJS.experiment.addData(&quot;operation_correct&quot;, 1);&amp;#10;        repeat_if_wrong_prac.finished = true;&amp;#10;    } else {&amp;#10;        msg3 = (&quot;Oops! That was wrong \nScore = &quot; + round(((number_correct_2 * 100) / loop_o), 2).toString()) + '%';&amp;#10;        msg3Color = &quot;red&quot;;&amp;#10;        psychoJS.experiment.addData(&quot;operation_correct&quot;, 0);&amp;#10;        repeat_if_wrong_prac.finished = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="loop_o = loop_o + 1&amp;#10;if not key_resp_11.keys: #if no entry&amp;#10;    continueRoutine = True&amp;#10;    msg3 ='Be faster! \nScore = ' + str(round(number_correct_2*100/loop_o,2)) + '%'&amp;#10;    msg3Color = 'red'&amp;#10;    thisExp.addData(&quot;operation_correct&quot;, 0)&amp;#10;    repeat_if_wrong_prac.finished = False&amp;#10;else:&amp;#10;    if (''.join(key_resp_11.keys) == str(Operation_answer)):&amp;#10;        number_correct_2 = number_correct_2 + 1&amp;#10;        msg3 ='Correct! \nScore = ' + str(round(number_correct_2*100/loop_o,2)) + '%'&amp;#10;        msg3Color = 'green'&amp;#10;        thisExp.addData(&quot;operation_correct&quot;, 1)&amp;#10;        repeat_if_wrong_prac.finished = True &amp;#10;    else:&amp;#10;        msg3 ='Oops! That was wrong \nScore = ' + str(round(number_correct_2*100/loop_o,2)) + '%'&amp;#10;        msg3Color = 'red'&amp;#10;        thisExp.addData(&quot;operation_correct&quot;, 0)&amp;#10;        repeat_if_wrong_prac.finished = False&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_15" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_msg_4">
        <Param name="color" updates="set every repeat" val="$msg3Color" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_msg_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg3" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="operation_4">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Problem" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback_quick_2">
      <CodeComponent name="code_16">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg4 = ''&amp;#10;loop_o_2 = 0&amp;#10;number_correct_3 = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg4 = &quot;&quot;;&amp;#10;loop_o_2 = 0;&amp;#10;number_correct_3 = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="feedback_msg_5.setText('')&amp;#10;loop_o_2 += 1;&amp;#10;if ((! key_resp_7.keys)) {&amp;#10;    continueRoutine = true;&amp;#10;    msg4 = (&quot;Be faster! \nScore = &quot; + round(((number_correct_3 * 100) / loop_o_2), 2).toString()) + '%';&amp;#10;    msg4Color = &quot;red&quot;;&amp;#10;    psychoJS.experiment.addData(&quot;operation_correct&quot;, 0);&amp;#10;    repeat_if_wrong.finished = false;&amp;#10;} else {&amp;#10;    if ((key_resp_7.keys.join('') === Operation_answer.toString())) {&amp;#10;        number_correct_3 = (number_correct_3 + 1);&amp;#10;        msg4 = (&quot;Correct! \nScore = &quot; + round(((number_correct_3 * 100) / loop_o_2), 2).toString()) + '%';&amp;#10;        msg4Color = &quot;green&quot;;&amp;#10;        psychoJS.experiment.addData(&quot;operation_correct&quot;, 1);&amp;#10;        repeat_if_wrong.finished = true;&amp;#10;    } else {&amp;#10;        msg4 = (&quot;Oops! That was wrong \nScore = &quot; + round(((number_correct_3 * 100) / loop_o_2), 2).toString()) + '%';&amp;#10;        msg4Color = &quot;red&quot;;&amp;#10;        psychoJS.experiment.addData(&quot;operation_correct&quot;, 0);&amp;#10;        repeat_if_wrong.finished = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="loop_o_2 += 1&amp;#10;&amp;#10;if not key_resp_7.keys: #if no entry&amp;#10;    continueRoutine = True&amp;#10;    msg4 ='Be faster! \nScore = ' + str(round(number_correct_3*100/loop_o_2,2)) + '%'&amp;#10;    msg4Color = 'red'&amp;#10;    thisExp.addData(&quot;operation_correct&quot;, 0)&amp;#10;    repeat_if_wrong.finished = False&amp;#10;else:&amp;#10;    if (''.join(key_resp_7.keys) == str(Operation_answer)):&amp;#10;        number_correct_3 = number_correct_3 + 1&amp;#10;        msg4 ='Correct! \nScore = ' + str(round(number_correct_3*100/loop_o_2,2)) + '%'&amp;#10;        msg4Color = 'green'&amp;#10;        thisExp.addData(&quot;operation_correct&quot;, 1)&amp;#10;        repeat_if_wrong.finished = True &amp;#10;    else:&amp;#10;        msg4 ='Oops! That was wrong \nScore = ' + str(round(number_correct_3*100/loop_o_2,2)) + '%'&amp;#10;        msg4Color = 'red'&amp;#10;        thisExp.addData(&quot;operation_correct&quot;, 0)&amp;#10;        repeat_if_wrong.finished = False&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_16" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_msg_5">
        <Param name="color" updates="set every repeat" val="$msg4Color" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_msg_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg4" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="operation_5">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="operation_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Problem" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instructions_memory"/>
    <LoopInitiator loopType="TrialHandler" name="next_level">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="999" valType="code"/>
      <Param name="name" updates="None" val="next_level" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="next_letter">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('letter', &quot; V'&quot;)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="resources/letters.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="stimuli_count" valType="code"/>
      <Param name="name" updates="None" val="next_letter" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="show_letters"/>
    <LoopTerminator name="next_letter"/>
    <Routine name="recall"/>
    <LoopTerminator name="next_level"/>
    <Routine name="instructions_processing"/>
    <LoopInitiator loopType="TrialHandler" name="repeat_practice">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="999" valType="code"/>
      <Param name="name" updates="None" val="repeat_practice" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="next_equation">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Task': 'Practice', 'Trial': 1, 'Problem': '(1x2) + 1', 'Operation_answer': 3}, {'Task': 'Practice', 'Trial': 2, 'Problem': '(1/1) - 1', 'Operation_answer': 0}, {'Task': 'Practice', 'Trial': 3, 'Problem': '(7x2) - 5', 'Operation_answer': 9}, {'Task': 'Practice', 'Trial': 4, 'Problem': '(4x4) - 14', 'Operation_answer': 2}, {'Task': 'Practice', 'Trial': 5, 'Problem': '(3/3) + 2', 'Operation_answer': 3}, {'Task': 'Practice', 'Trial': 6, 'Problem': '(2x6) - 8', 'Operation_answer': 4}, {'Task': 'Practice', 'Trial': 7, 'Problem': '(4x6) - 17', 'Operation_answer': 7}, {'Task': 'Practice', 'Trial': 8, 'Problem': '(3/3) + 5', 'Operation_answer': 6}, {'Task': 'Practice', 'Trial': 9, 'Problem': '(4/2) + 5', 'Operation_answer': 7}, {'Task': 'Practice', 'Trial': 10, 'Problem': '(8/4) + 3', 'Operation_answer': 5}, {'Task': 'Practice', 'Trial': 11, 'Problem': '(5x3) - 7', 'Operation_answer': 8}, {'Task': 'Practice', 'Trial': 12, 'Problem': '(8/2) + 4', 'Operation_answer': 8}, {'Task': 'Practice', 'Trial': 13, 'Problem': '(3x8) - 19 ', 'Operation_answer': 5}, {'Task': 'Practice', 'Trial': 14, 'Problem': '(6/3) + 4 ', 'Operation_answer': 6}, {'Task': 'Practice', 'Trial': 15, 'Problem': '(9/3) - 2', 'Operation_answer': 1}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="resources/processing_only_2.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="next_equation" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trials_processing"/>
    <Routine name="feedback"/>
    <LoopTerminator name="next_equation"/>
    <Routine name="final_feedback"/>
    <LoopTerminator name="repeat_practice"/>
    <Routine name="instructions_complex_prac"/>
    <LoopInitiator loopType="TrialHandler" name="span_recall_prac">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="999" valType="code"/>
      <Param name="name" updates="None" val="span_recall_prac" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="span_size_prac">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('letter', 'Z Q J H K T S N R X L V')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="resources/letters.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="2" valType="code"/>
      <Param name="name" updates="None" val="span_size_prac" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="repeat_if_wrong_prac">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Task': 'Practice', 'Trial': 1, 'Problem': '(1x2) + 1', 'Operation_answer': 3}, {'Task': 'Practice', 'Trial': 2, 'Problem': '(1/1) - 1', 'Operation_answer': 0}, {'Task': 'Practice', 'Trial': 3, 'Problem': '(7x2) - 5', 'Operation_answer': 9}, {'Task': 'Practice', 'Trial': 4, 'Problem': '(4x4) - 14', 'Operation_answer': 2}, {'Task': 'Practice', 'Trial': 5, 'Problem': '(3/3) + 2', 'Operation_answer': 3}, {'Task': 'Practice', 'Trial': 6, 'Problem': '(2x6) - 8', 'Operation_answer': 4}, {'Task': 'Practice', 'Trial': 7, 'Problem': '(4x6) - 17', 'Operation_answer': 7}, {'Task': 'Practice', 'Trial': 8, 'Problem': '(3/3) + 5', 'Operation_answer': 6}, {'Task': 'Practice', 'Trial': 9, 'Problem': '(4/2) + 5', 'Operation_answer': 7}, {'Task': 'Practice', 'Trial': 10, 'Problem': '(8/4) + 3', 'Operation_answer': 5}, {'Task': 'Practice', 'Trial': 11, 'Problem': '(5x3) - 7', 'Operation_answer': 8}, {'Task': 'Practice', 'Trial': 12, 'Problem': '(8/2) + 4', 'Operation_answer': 8}, {'Task': 'Practice', 'Trial': 13, 'Problem': '(3x8) - 19 ', 'Operation_answer': 5}, {'Task': 'Practice', 'Trial': 14, 'Problem': '(6/3) + 4 ', 'Operation_answer': 6}, {'Task': 'Practice', 'Trial': 15, 'Problem': '(9/3) - 2', 'Operation_answer': 1}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="resources/processing_only_2.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="999" valType="code"/>
      <Param name="name" updates="None" val="repeat_if_wrong_prac" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trials_processing_prac"/>
    <Routine name="feedback_quick"/>
    <LoopTerminator name="repeat_if_wrong_prac"/>
    <Routine name="show_letters_prac"/>
    <LoopTerminator name="span_size_prac"/>
    <Routine name="recall_prac"/>
    <Routine name="feedback_2"/>
    <LoopTerminator name="span_recall_prac"/>
    <Routine name="instructions_complex"/>
    <LoopInitiator loopType="TrialHandler" name="span_recall">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="999" valType="code"/>
      <Param name="name" updates="None" val="span_recall" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="span_size">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('letter', 'Z Q J H K T S N R X L V')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="resources/letters.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="span_count" valType="code"/>
      <Param name="name" updates="None" val="span_size" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="repeat_if_wrong">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Task': 'Practice', 'Trial': 1, 'Problem': '(1x2) + 1', 'Operation_answer': 3}, {'Task': 'Practice', 'Trial': 2, 'Problem': '(1/1) - 1', 'Operation_answer': 0}, {'Task': 'Practice', 'Trial': 3, 'Problem': '(7x2) - 5', 'Operation_answer': 9}, {'Task': 'Practice', 'Trial': 4, 'Problem': '(4x4) - 14', 'Operation_answer': 2}, {'Task': 'Practice', 'Trial': 5, 'Problem': '(3/3) + 2', 'Operation_answer': 3}, {'Task': 'Practice', 'Trial': 6, 'Problem': '(2x6) - 8', 'Operation_answer': 4}, {'Task': 'Practice', 'Trial': 7, 'Problem': '(4x6) - 17', 'Operation_answer': 7}, {'Task': 'Practice', 'Trial': 8, 'Problem': '(3/3) + 5', 'Operation_answer': 6}, {'Task': 'Practice', 'Trial': 9, 'Problem': '(4/2) + 5', 'Operation_answer': 7}, {'Task': 'Practice', 'Trial': 10, 'Problem': '(8/4) + 3', 'Operation_answer': 5}, {'Task': 'Practice', 'Trial': 11, 'Problem': '(5x3) - 7', 'Operation_answer': 8}, {'Task': 'Practice', 'Trial': 12, 'Problem': '(8/2) + 4', 'Operation_answer': 8}, {'Task': 'Practice', 'Trial': 13, 'Problem': '(3x8) - 19 ', 'Operation_answer': 5}, {'Task': 'Practice', 'Trial': 14, 'Problem': '(6/3) + 4 ', 'Operation_answer': 6}, {'Task': 'Practice', 'Trial': 15, 'Problem': '(9/3) - 2', 'Operation_answer': 1}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="resources/processing_only_2.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="999" valType="code"/>
      <Param name="name" updates="None" val="repeat_if_wrong" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trials_processing_2"/>
    <Routine name="feedback_quick_2"/>
    <LoopTerminator name="repeat_if_wrong"/>
    <Routine name="show_letters_2"/>
    <LoopTerminator name="span_size"/>
    <Routine name="recall_2"/>
    <LoopTerminator name="span_recall"/>
    <Routine name="finished"/>
  </Flow>
</PsychoPy2experiment>
